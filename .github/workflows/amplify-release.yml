name: Create Release and Deploy to Staging

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: write

jobs:
  release_and_deploy:
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Create release version
        id: release
        uses: sourav-todaypay/workflows/semantic-release@main

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::270290807521:role/GitHubActionsAmplifyDeployRole1
          aws-region: us-east-1

      - name: Build Next.js app (standalone)
        run: |
          npm run build
          mkdir -p .output-zip
          cp -r .next/standalone .output-zip/
          cp -r public .output-zip/
          cp -r .next/static .output-zip/
          cp package.json .output-zip/
          cd .output-zip && zip -r ../app.zip . && cd ..

      - name: Upload build to S3
        run: |
          aws s3 cp app.zip s3://nextjs-admin-builds/releases/v${{ steps.release.outputs.version }}.zip
          aws s3 ls s3://nextjs-admin-builds/releases/v${{ steps.release.outputs.version }}.zip
          
      - name: Trigger Amplify deployment (staging)
        run: |
          aws amplify start-deployment \
            --app-id ddwpoj2b9jk65 \
            --branch-name staging \
            --source-url https://nextjs-admin-builds.s3.amazonaws.com/releases/v${{ steps.release.outputs.version }}.zip

      - name: Send Slack success notification
        if: ${{ success() && steps.release.outputs.version != '' }}
        uses: kranthisai-1/workflows/slack-alert@main
        with:
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          slack_token: ${{ secrets.SLACK_TOKEN }}
          title: "âœ… Staging Deployment Complete"
          message: "Version `v${{ steps.release.outputs.version }}` was deployed to *staging*."
          message_type: "success"
